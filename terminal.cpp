#include <iostream>#include <sys/socket.h>#include <netinet/in.h>#include <arpa/inet.h>#include <unistd.h>using namespace std;int main(int argc, char *argv[]) {    if (argc != 2) {        cout << "Usage: ./port_scanner <ip_address>" << endl;        return 1;    }        char *ip_address = argv[1];    int socket_fd = socket(AF_INET, SOCK_STREAM, 0);        if (socket_fd < 0) {        cout << "Error creating socket" << endl;        return 1;    }        for (int port = 1; port <= 65535; port++) {        struct sockaddr_in address;        address.sin_family = AF_INET;        address.sin_port = htons(port);        inet_pton(AF_INET, ip_address, &address.sin_addr);                int result = connect(socket_fd, (struct sockaddr *) &address, sizeof(address));                if (result == 0) {            cout << "Port " << port << " is open" << endl;        }    }        close(socket_fd);        return 0;}